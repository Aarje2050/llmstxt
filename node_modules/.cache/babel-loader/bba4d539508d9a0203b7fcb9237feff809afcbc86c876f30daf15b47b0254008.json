{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshjat/My Development Corner/LLMstxt/frontend/src/components/UrlInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UrlInput({\n  onScrape,\n  loading\n}) {\n  _s();\n  const [urlInput, setUrlInput] = useState('');\n  const [error, setError] = useState('');\n  const [urlMode, setUrlMode] = useState('single'); // 'single' or 'bulk'\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Remove any error message\n    setError('');\n\n    // Process URLs based on mode\n    let urls = [];\n    if (urlMode === 'single') {\n      const url = urlInput.trim();\n      if (!url) {\n        setError('Please enter a URL');\n        return;\n      }\n\n      // Add scheme if missing\n      let processedUrl = url;\n      if (!url.startsWith('http://') && !url.startsWith('https://')) {\n        processedUrl = 'https://' + url;\n      }\n\n      // Basic validation\n      try {\n        new URL(processedUrl);\n        urls = [processedUrl];\n      } catch (_) {\n        setError('Please enter a valid URL (e.g., example.com or https://example.com)');\n        return;\n      }\n    } else {\n      // Bulk mode - this is disabled in the UI but keeping logic for future\n      urls = urlInput.split('\\n').map(url => url.trim()).filter(url => url !== '').map(url => !url.startsWith('http://') && !url.startsWith('https://') ? 'https://' + url : url);\n\n      // Validate URLs\n      if (urls.length === 0) {\n        setError('Please enter at least one URL');\n        return;\n      }\n\n      // Check for invalid URLs\n      try {\n        urls.forEach(url => new URL(url));\n      } catch (_) {\n        setError('One or more URLs are invalid. Please check and try again.');\n        return;\n      }\n    }\n\n    // Call the parent handler\n    onScrape(urls);\n  };\n  const toggleUrlMode = mode => {\n    // Only allow switching to single mode\n    if (mode === 'single') {\n      setUrlMode(mode);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"url-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate LLMs.txt and Markdown Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a website URL to generate LLMs.txt and .md files with content from the site.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toggle-option ${urlMode === 'single' ? 'active' : ''}`,\n        onClick: () => toggleUrlMode('single'),\n        children: \"Single URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-option disabled\",\n        title: \"Bulk URL processing coming soon\",\n        children: [\"Bulk URLs\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coming-soon-badge\",\n          children: \"COMING SOON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"url-input\",\n          children: urlMode === 'single' ? 'Website URL:' : 'Website URLs (one per line):'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), urlMode === 'single' ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"url-input\",\n          placeholder: \"example.com\",\n          value: urlInput,\n          onChange: e => setUrlInput(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"url-input\",\n          rows: \"5\",\n          placeholder: \"example.com\",\n          value: urlInput,\n          onChange: e => setUrlInput(e.target.value),\n          required: true,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        disabled: loading,\n        style: {\n          backgroundColor: '#0171ce'\n        },\n        children: loading ? 'Processing...' : 'Generate Files'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(UrlInput, \"VfZbLSVVnEF6KugMQ+ykOr0iUU8=\");\n_c = UrlInput;\nexport default UrlInput;\nvar _c;\n$RefreshReg$(_c, \"UrlInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UrlInput","onScrape","loading","_s","urlInput","setUrlInput","error","setError","urlMode","setUrlMode","handleSubmit","e","preventDefault","urls","url","trim","processedUrl","startsWith","URL","_","split","map","filter","length","forEach","toggleUrlMode","mode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","rows","disabled","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/rajeshjat/My Development Corner/LLMstxt/frontend/src/components/UrlInput.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction UrlInput({ onScrape, loading }) {\n  const [urlInput, setUrlInput] = useState('');\n  const [error, setError] = useState('');\n  const [urlMode, setUrlMode] = useState('single'); // 'single' or 'bulk'\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Remove any error message\n    setError('');\n    \n    // Process URLs based on mode\n    let urls = [];\n    \n    if (urlMode === 'single') {\n      const url = urlInput.trim();\n      \n      if (!url) {\n        setError('Please enter a URL');\n        return;\n      }\n      \n      // Add scheme if missing\n      let processedUrl = url;\n      if (!url.startsWith('http://') && !url.startsWith('https://')) {\n        processedUrl = 'https://' + url;\n      }\n      \n      // Basic validation\n      try {\n        new URL(processedUrl);\n        urls = [processedUrl];\n      } catch (_) {\n        setError('Please enter a valid URL (e.g., example.com or https://example.com)');\n        return;\n      }\n    } else {\n      // Bulk mode - this is disabled in the UI but keeping logic for future\n      urls = urlInput\n        .split('\\n')\n        .map(url => url.trim())\n        .filter(url => url !== '')\n        .map(url => !url.startsWith('http://') && !url.startsWith('https://') ? 'https://' + url : url);\n      \n      // Validate URLs\n      if (urls.length === 0) {\n        setError('Please enter at least one URL');\n        return;\n      }\n      \n      // Check for invalid URLs\n      try {\n        urls.forEach(url => new URL(url));\n      } catch (_) {\n        setError('One or more URLs are invalid. Please check and try again.');\n        return;\n      }\n    }\n    \n    // Call the parent handler\n    onScrape(urls);\n  };\n  \n  const toggleUrlMode = (mode) => {\n    // Only allow switching to single mode\n    if (mode === 'single') {\n      setUrlMode(mode);\n    }\n  };\n\n  return (\n    <div className=\"url-input-container\">\n      <h2>Generate LLMs.txt and Markdown Files</h2>\n      <p>Enter a website URL to generate LLMs.txt and .md files with content from the site.</p>\n      \n      <div className=\"toggle-container\">\n        <div \n          className={`toggle-option ${urlMode === 'single' ? 'active' : ''}`}\n          onClick={() => toggleUrlMode('single')}\n        >\n          Single URL\n        </div>\n        <div \n          className=\"toggle-option disabled\"\n          title=\"Bulk URL processing coming soon\"\n        >\n          Bulk URLs\n          <span className=\"coming-soon-badge\">COMING SOON</span>\n        </div>\n      </div>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n          <label htmlFor=\"url-input\">\n            {urlMode === 'single' ? 'Website URL:' : 'Website URLs (one per line):'}\n          </label>\n          {urlMode === 'single' ? (\n            <input\n              type=\"text\"\n              id=\"url-input\"\n              placeholder=\"example.com\"\n              value={urlInput}\n              onChange={(e) => setUrlInput(e.target.value)}\n              required\n            />\n          ) : (\n            <textarea \n              id=\"url-input\"\n              rows=\"5\"\n              placeholder=\"example.com\"\n              value={urlInput}\n              onChange={(e) => setUrlInput(e.target.value)}\n              required\n              disabled\n            />\n          )}\n        </div>\n        \n        {error && (\n          <div className=\"alert alert-error\">\n            {error}\n          </div>\n        )}\n        \n        <button \n          type=\"submit\" \n          className=\"btn\" \n          disabled={loading}\n          style={{ backgroundColor: '#0171ce' }}\n        >\n          {loading ? 'Processing...' : 'Generate Files'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default UrlInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}